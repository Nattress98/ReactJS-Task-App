{"version":3,"sources":["Comment.js","CommentList.js","Todo.js","TodoList.js","App.js","index.js"],"names":["Comment","comment","CommentList","comments","map","key","id","Todo","todo","toggleTodo","addTodoComment","useState","commenting","setCommenting","commentBoxRef","useRef","className","type","checked","completed","onChange","name","console","log","onClick","icon","faComment","color","ref","placeholder","current","value","TodoList","todos","App","setTodos","todoNameRef","useEffect","storedTodos","JSON","parse","localStorage","getItem","setItem","stringify","e","prevTodos","uuidv4","newTodos","filter","find","push","length","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a28bffeb.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nexport default function Comment({ comment }) {\r\n  return <li>{comment.comment} </li>;\r\n}\r\n","import React from \"react\";\r\nimport Comment from \"./Comment\";\r\nexport default function CommentList({ comments }) {\r\n  return comments.map(comment => {\r\n    return <Comment key={comment.id} comment={comment} />;\r\n  });\r\n}\r\n","import React, { useState, useRef } from \"react\";\r\nimport { faComment } from \"@fortawesome/free-regular-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport CommentList from \"./CommentList\";\r\n\r\nexport default function Todo({ todo, toggleTodo, addTodoComment }) {\r\n  const [commenting, setCommenting] = useState(false);\r\n  const commentBoxRef = useRef();\r\n  function handleTodoClick() {\r\n    toggleTodo(todo.id);\r\n  }\r\n\r\n  function handleCommentClicked() {\r\n    setCommenting(!commenting);\r\n  }\r\n  function submitComment() {\r\n    const comment = commentBoxRef.current.value;\r\n    if (comment === \"\") return;\r\n    commentBoxRef.current.value = null;\r\n    setCommenting(!commenting);\r\n    addTodoComment(todo.id, comment);\r\n  }\r\n  return (\r\n    <div>\r\n      <div className=\"Task\">\r\n        <label>\r\n          <input\r\n            type=\"checkbox\"\r\n            checked={todo.completed}\r\n            onChange={handleTodoClick}\r\n          />\r\n          <h3>{todo.name}</h3>\r\n          <ul>\r\n            <CommentList comments={todo.comments} />\r\n          </ul>\r\n          {console.log(todo.comments)}\r\n        </label>\r\n        <button className=\"CommentButton\" onClick={handleCommentClicked}>\r\n          <FontAwesomeIcon icon={faComment} color={\"white\"} />\r\n        </button>\r\n      </div>\r\n      {commenting ? (\r\n        <div className=\"CommentBox\">\r\n          <textarea ref={commentBoxRef} placeholder=\"commenting...\"></textarea>\r\n          <button onClick={submitComment}>Submit</button>{\" \"}\r\n        </div>\r\n      ) : null}\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport Todo from \"./Todo\";\r\n\r\nexport default function TodoList({ todos, toggleTodo, addTodoComment }) {\r\n  return todos.map(todo => {\r\n    return (\r\n      <Todo\r\n        key={todo.id}\r\n        toggleTodo={toggleTodo}\r\n        todo={todo}\r\n        addTodoComment={addTodoComment}\r\n      />\r\n    );\r\n  });\r\n}\r\n","import React, { useState, useRef, useEffect } from \"react\";\nimport TodoList from \"./TodoList\";\nimport uuidv4 from \"uuid/v4\";\nimport \"./main.css\";\nfunction App() {\n  const [todos, setTodos] = useState([]);\n  const todoNameRef = useRef();\n  const LOCAL_STORAGE_KEY = \"todoApp.todos\";\n\n  useEffect(() => {\n    const storedTodos = JSON.parse(localStorage.getItem(LOCAL_STORAGE_KEY));\n    if (storedTodos) setTodos(storedTodos);\n  }, []);\n  useEffect(() => {\n    localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(todos));\n  }, [todos]);\n\n  return (\n    <>\n      <h1>Task List</h1>\n      <input id=\"NewTaskInput\" ref={todoNameRef} type=\"text\" />\n      <button className=\"ToolButtons\" onClick={handleAddTodo}>\n        Add Todo\n      </button>\n      <button onClick={emptyTodoList}>Clear Completed Todos</button>\n\n      <TodoList\n        todos={todos}\n        toggleTodo={toggleTodo}\n        addTodoComment={addTodoComment}\n      />\n      <div id=\"TodosLeft\">\n        {\" \"}\n        {todos.filter(todo => !todo.completed).length} Left Todo\n      </div>\n    </>\n  );\n  function handleAddTodo(e) {\n    const name = todoNameRef.current.value;\n    if (name === \"\") return;\n    todoNameRef.current.value = null;\n    setTodos(prevTodos => {\n      return [\n        ...prevTodos,\n        {\n          id: uuidv4(),\n          name: name,\n          completed: false,\n          comments: []\n        }\n      ];\n    });\n  }\n  function emptyTodoList(e) {\n    const newTodos = todos.filter(todo => !todo.completed);\n    setTodos(newTodos);\n  }\n  function toggleTodo(id) {\n    const newTodos = [...todos];\n    const todo = newTodos.find(todo => todo.id === id);\n    todo.completed = !todo.completed;\n    setTodos(newTodos);\n    console.log(\"newtodos\" + newTodos.find(todo => todo.id === id).completed);\n  }\n  function addTodoComment(id, comment) {\n    const newTodos = [...todos];\n    const todo = newTodos.find(todo => todo.id === id);\n    todo.comments.push({ id: uuidv4(), comment: comment });\n    setTodos(newTodos);\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}